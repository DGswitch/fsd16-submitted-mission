{
  "accountName": {

    "title":                  "Active Account Name",
    "caption":                "Set Account name for current account",

    "setting": {

      "caption":              "Update your (active) account name or select/deselect an Ada Handle.",

      "adaHandle": {

        "select":             "Select which Ada Handle to display instead of the account name (deselect to display the name instead):"
      },

      "error": {

        "empty":              "Account name cannot be empty.",
        "duplicate":          "This waller already has an account with that name."
      }
    }
  },

  "export": {

    "title":                  "Export Account Key",
    "caption":                "Export the public key of this account.",

    "setting": {

      "caption":              "Export the public key of this account. Importing a public key restores the account history in a read-only mode with signing disabled.",

      "tooltip": {

        "acct_xvk":           "Ed25519-bip32 extended public key",
        "xpub":               "Ed25519-bip32 extended public key",
        "acct_vk":            "Ed25519 public key"
      }
    }
  },

  "samMode":  {

    "title":                  "Single Address Mode (SAM)",
    "caption":                "Only use a single address for all transactions.",

    "setting": {

      "caption":              "When enabled, all funds will be held on the first receive address by default.",
      "enabled":              "$t(settings/account:samMode.title) enabled",
      "disabled":             "$t(settings/account:samMode.title) disabled",

      "customAddress":        "Custom receive address",
      "unset":                "$t(common:unset)",

      "banner": {

        "customAddress": {

          "title":            "Important!",
          "text":             "Setting a custom receive address will make all change outputs and receive address switch to this address, even if not owned by this account. Please be sure to verify that the correct address is set."
        }
      },

      "notification": {

        "wrongInput":         "Is is not a valid address.",
        "wrongNetwork":       "This address is from a different network.",
        "notOwned":           "This address does not belong to this account and can't be used as custom receive address.",
        "nonStaking":         "The funds on this receive address are staked with an external stake key. You won't control the rewards that they accrue.",
        "success":            "Custom receive address set.",
        "error":              "Failed to save custom receive address!"
      }
    }
  },

  "collateral":  {

    "title":                  "Collateral",
    "caption":                "Use Eternl provided collateral?",

    "setting": {

      "caption":              "When enabled, Eternl will provide collateral for the account.",
      "info":                 "Interacting with smart contracts can require collateral in case a transaction fails. This will be handled automatically by Eternl if a qualifying UTxO has been found.",

      "waiting":              "You have submitted a collateral transaction. Please stand by, it has not yet been confirmed.",
      "foundCollateral":      "A collateral UTxO for this account is already present. It'll be used when interacting with smart contracts.",

      "eternl": {

        "label":              "Eternl provided collateral",
        "enabled":            "$t(settings/account:collateral.setting.eternl.label) $t(common:enabled)",
        "disabled":           "$t(settings/account:collateral.setting.eternl.label) $t(common:disabled)"
      },

      "noCollateral":         "No collateral UTxO found. Please set one by pressing the button below.",

      "button": {

        "setCollateral": {

          "label":            "Set Collateral",
          "tooltip":          "Set a collateral UTxO for this account."
        }
      },

      "error": {

        "label":              "Error:"
      },

      "multiAccount": {

        "warning": {

          "note":             "Please Note!",
          "headline":         "Collateral is an account based setting."
        },

        "info": {

          "text":             "$t(common:appName) can use any UTxO with no tokens and a value between ####minimumCollateral#### and ####maximumCollateral#### as collateral. When you activate this setting, it will look for a UTxO that is suitable. If none is available, a button will be shown to set one."
        }
      }
    }
  },

  "manualSync": {

    "title":                  "Manual Sync",
    "caption":                "Set manual sync",

    "setting": {

      "caption":              "Manually synchronize the wallet. If enabled the wallet needs to be synced manually by clicking the sync icon.",
      "enabled":              "$t(settings/account:manualSync.title) enabled",
      "disabled":             "$t(settings/account:manualSync.title) disabled"
    }
  },

  "historySync":  {

    "title":                  "History Sync",
    "caption":                "Set history sync",

    "setting": {

      "caption":              "When enabled, the wallet will sync the full transaction history of the account. Otherwise, only the last 1000 transactions will be synced. Syncing happens in batches and may take a while for accounts with a large history.",
      "enabled":              "$t(settings/account:historySync.title) enabled",
      "disabled":             "$t(settings/account:historySync.title) disabled",

      "syncing":              "The history sync is still running. Waiting to sync {{AMOUNT}} entries."
    }
  },

  "tokenFragmentation": {

    "title":                  "Token Fragmentation (TF)",
    "caption":                "Reduce transaction fees by fragmenting tokens.",

    "fragment": {

      "label":                "Token bundle size",
      "error":                "Token bundle size limit: 1-{{MAX_TOKEN_BUNDLE_SIZE}}.",
      "info":                 "Sets number of tokens each UTxO output should contain. It's a tradeoff between low transaction fees and amount of funds locked in the wallet.\nsmall bundle size -> low fees, more Ada locked.\nlarge bundle size -> higher fees, less Ada locked."
    },

    "setting": {

      "caption":              "Split tokens into bundles on send if there are more tokens in change to be returned than set value. Depending on wallet UTxO/Token distribution and desired outcome, values might have to be tweaked for optimal result.",
      "enabled":              "$t(settings/account:tokenFragmentation.title) enabled",
      "disabled":             "$t(settings/account:tokenFragmentation.title) disabled"
    }
  },

  "advancedUtxoManagement":  {

    "title":                  "Advanced UTxO Management",
    "caption":                "Use advanced UTxO management on your transactions.",

    "setting": {

      "caption":              "When enabled, $t(common:appName) will use advanced UTxO management on your transactions.",
      "subCaption":           "It keeps 10 UTxOs around for parallel execution of transactions. It will also try to keep a 5 ADA collateral UTxO around for smart contract interactions.",

      "enabled":              "$t(settings/account:advancedUtxoManagement.title) enabled",
      "disabled":             "$t(settings/account:advancedUtxoManagement.title) disabled"
    }
  },

  "autoWithdrawal": {

    "title":                  "Auto Withdrawal",
    "caption":                "Automatically withdraw rewards if needed.",

    "setting": {

      "caption":              "When enabled, rewards will automatically be withdrawn if needed when creating a transaction. If disabled or for forced manual withdrawal, use Withdrawal button on Summary page.",

      "enabled":              "$t(settings/account:autoWithdrawal.title) enabled",
      "disabled":             "$t(settings/account:autoWithdrawal.title) disabled"
    }
  },

  "unStake": {

    "title":                  "Un-stake wallet\n(De-register wallet)",
    "caption":                "Un-delegated current account from any pool and create de-registration transaction.",

    "setting": {

      "caption":              "This action creates an account de-registration transaction. Once completed, the account will be un-delegated from any pool, and the key deposit from when the account was first delegated is returned.",
      "subCaption":           "Please note that any pending rewards from pool delegation, catalyst rewards, etc will be lost when the account is de-registered!",

      "acknowledged":         "I understand that any pending rewards will be lost.",
      "noUtxo":               "{{currency}} needed to pay for de-registration transaction fee.",

      "button": {

        "deReg": {

          "label":            "De-Register Account",
          "tooltip":          "De-register account from pool delegation"
        }
      }
    }
  },

  "deRegDRep": {

    "title":                  "Deregister as DRep",
    "caption":                "Create a DRep de-registration transaction. The voting power delegated to that DRep will be lost.",

    "setting": {

      "caption":              "This will create a DRep de-registration transaction. The voting power delegated to that DRep will be lost.",
      "subCaption":           "To regain the ability to withdraw staking rewards, you will need to delegate your account to a different DRep.",

      "acknowledged":         "I understand that all delegated voting power will be lost.",
      "noUtxo":               "{{currency}} needed to pay for de-registration transaction fee.",

      "button": {

        "deReg": {

          "label":            "De-Register Account",
          "tooltip":          "De-register account from pool delegation"
        }
      }
    }
  },

  "reporting":  {

    "title":                  "Reporting",
    "caption":                "Tax reporting export settings."
  }
}
